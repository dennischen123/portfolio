{"version":3,"sources":["components/About.js","components/Projects.js","components/Contact.js","components/Home.js","components/Nav.js","components/Resume.js","components/App/App.js","serviceWorker.js","index.js"],"names":["About","className","Projects","githubIcon","icon","faGithub","src","process","alt","href","Contact","useState","name","setName","email","setEmail","message","setMessage","type","value","onChange","e","target","placeholder","onClick","console","log","Home","to","Nav","navStyle","color","linkedinIcon","faLinkedin","style","Resume","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.48fa131f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction About() {\n  return (\n    <div className=\"About\">\n      <h1>About</h1>\n    </div>\n  );\n}\n\nexport default About;\n ","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\n\nfunction Projects() {\n  const githubIcon = <FontAwesomeIcon className = \"mr-2 icon-github\" icon = { faGithub }/>\n\n  return (\n    <div className=\"Projects\">\n      <h1 className=\"mb-5\">Projects</h1>\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <div className=\"col-sm row\">\n            <img className=\"col-sm image\" src={`${process.env.PUBLIC_URL}/images/trackItPic.png`} alt=\"projectPicture\"></img>\n            <div className=\"col-sm text-left\">\n              <div>\n                <a href=\"https://github.com/dennischen123/trackIt\"> { githubIcon } </a>\n                <a href=\"https://track--it.herokuapp.com/\"><img className=\"icon-heroku\" src=\"https://img.icons8.com/color/48/000000/heroku.png\" alt=\"icon\"></img></a>\n              </div>\n              <h5>Track IT - Warranty Tracker</h5>\n              <h6>Description:</h6>\n              <p>Warranty tracker website to store receipts and related information for ease of warranty claiming. </p>\n              {/* <h6>Challenges:</h6>\n              <p></p> */}\n              <h6>Technology Stack</h6>\n              <div className=\"icons\">\n                <img className=\"icon\" alt=\"icon\" src=\"https://img.icons8.com/color/48/000000/mongodb.png\"></img>\n                <img className=\"icon-express\" alt=\"icon\" src={`${process.env.PUBLIC_URL}/images/express-logo.png`}></img>\n                <img className=\"icon-react\" alt=\"icon\" src=\"https://img.icons8.com/plasticine/100/000000/react.png\"></img>\n                <img className=\"icon-node\" alt=\"icon\" src=\"https://img.icons8.com/windows/96/000000/nodejs.png\"></img>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm row\">\n            <img className=\"col-sm image\" src={`${process.env.PUBLIC_URL}/images/budgetFusion.png`} alt=\"projectPicture\"></img>\n            <div className=\"col-sm text-left\">\n              <div>\n                <a href=\"https://github.com/dennischen123/budgetFusion\"> { githubIcon } </a>\n                <a href=\"https://budgetfusion.herokuapp.com/\"><img className=\"icon-heroku\" src=\"https://img.icons8.com/color/48/000000/heroku.png\" alt=\"icon\"></img></a>\n              </div>\n              <h5>Budget Fusion</h5>\n              <h6>Description:</h6>\n              <p>Budgeting website to set, keep record of expenses and being able to see a visual overview of your spending.</p>\n              {/* <h6>challenges</h6>\n              <p></p> */}\n              <h6>Technology Stack</h6>\n              <div className=\"icons\">\n                <img className=\"icon-python\" alt=\"icon\" src=\"https://img.icons8.com/color/48/000000/python.png\"></img>\n                <img className=\"icon-django\" alt=\"icon\" src=\"https://img.icons8.com/ios/100/000000/django.png\"></img>\n                <img className=\"icon-bootstrap\" alt=\"icon\" src=\"https://img.icons8.com/color/48/000000/bootstrap.png\"></img>\n                <img className=\"icon-chartJS\" alt=\"icon\" src=\"https://cms-assets.tutsplus.com/uploads/users/1251/posts/28384/preview_image/chartjs-tutsplus.jpg\"></img>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm row\">\n            <img className=\"col-sm image\" src={`${process.env.PUBLIC_URL}/images/yelpPal.png`} alt=\"projectPicture\"></img>\n            <div className=\"col-sm text-left\">\n              <div>\n                <a href=\"https://github.com/dennischen123/YelpPal\"> { githubIcon } </a>\n                <a href=\"https://budgetfusion.herokuapp.com/\"><img className=\"icon-heroku\" src=\"https://img.icons8.com/color/48/000000/heroku.png\" alt=\"icon\"></img></a>\n              </div>\n              <h5>YelpPal</h5>\n              <h6>Description:</h6>\n              <p>YelpPal is a reviewing website for MealPal restaurants. Where you can find the best rated and best portion meals from others without wasted meals.</p>\n              {/* <h6>challenges</h6> */}\n              {/* <p></p> */}\n              <h6>Technology Stack</h6>\n              <div className=\"icons\">\n                <img className=\"icon\" alt=\"icon\" src=\"https://img.icons8.com/color/48/000000/mongodb.png\"></img>\n                <img className=\"icon-express\" alt=\"icon\" src={`${process.env.PUBLIC_URL}/images/express-logo.png`}></img>\n                <img className=\"icon-node ml-3\" alt=\"icon\" src=\"https://img.icons8.com/windows/96/000000/nodejs.png\"></img>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm row\">\n            <img className=\"col-sm image\" src={`${process.env.PUBLIC_URL}/images/game.png`} alt=\"projectPicture\"></img>\n            <div className=\"col-sm text-left\">\n              <div>\n                <a href=\"https://github.com/dennischen123/Pattern-Matching-Game\"> { githubIcon } </a>\n                <a href=\"https://dennischen123.github.io/Pattern-Matching-Game/\"><img className=\"icon-heroku\" src=\"https://img.icons8.com/color/48/000000/heroku.png\" alt=\"icon\"></img></a>\n              </div>\n              <h5>Pattern Matching Game</h5>\n              <h6>Description:</h6>\n              <p>Game to test and improve your Spatial memory with a round based difficulty increase.</p>\n              {/* <h6>challenges</h6>\n              <p></p> */}\n              <h6>Technology Stack</h6>\n              <div className=\"icons mt-0\">\n                <img className=\"icon\" alt=\"icon\" src=\"https://img.icons8.com/ios-filled/50/000000/javascript-logo.png\"></img>\n                <img className=\"icon-bootstrap\" alt=\"icon\" src=\"https://img.icons8.com/color/48/000000/bootstrap.png\"></img>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Projects;\n","import React, { useState, useEffect} from 'react';\n\nfunction Contact() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = () => {\n    console.log(\"form submited\");\n    setName('');\n    setEmail('');\n    setMessage('');\n  }\n\n  return (\n    <div className=\"Contact mt-5\">\n      <h1 className=\"text-center mb-5\">Contact Me</h1>\n      <form>\n        <p className=\"mb-5\" type=\"Name:\"><input value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Name\"></input></p>\n        <p className=\"mb-5\" type=\"Email:\"><input value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\"></input></p>\n        <p type=\"Message:\"><textarea placeholder=\"Message\" value={message} onChange={(e) => setMessage(e.target.value)}></textarea></p>\n      </form>\n      <button className=\"mt-5 text-right\" onClick={handleSubmit}>Send Message</button>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nfunction Home() {\n  return (\n    <div className=\"Home ml-5 mr-5\">\n      <main>\n        <h5 className=\"ml-2\">Hi, my name is</h5>\n        <h1>Dennis Chen.</h1>\n        <h3 className=\"mb-5\">Full Stack Software Engineer</h3>\n        <Link to=\"/projects\">\n          <button>Projects</button>\n        </Link>\n      </main>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\n\nfunction Nav() {\n    const navStyle = {\n        color: 'black',\n    };\n    const githubIcon = < FontAwesomeIcon className = \"mr-2 icon-github\"\n    icon = { faGithub }\n    />\n    const linkedinIcon = < FontAwesomeIcon className = \"ml-2 icon-linkedin\"\n    icon = { faLinkedin }\n    />\n\n    return (\n        <nav >\n            <div>\n                <h3 className=\"pt-3\" > Dennis Chen </h3>\n                <a href=\"https://github.com/dennischen123\"> { githubIcon } </a>\n                <a href=\"https://www.linkedin.com/in/dennischen123/\" > { linkedinIcon } </a>\n            </div>\n            <ul className=\"nav-links\">\n                <Link style={ navStyle } to=\"/\">\n                    <li> Home </li>\n                </Link>\n                <Link style={ navStyle } to=\"/about\">\n                    <li> About </li>\n                </Link>\n                <Link style={ navStyle } to=\"/projects\">\n                    <li> Projects </li>\n                </Link>\n                <Link style={ navStyle } to=\"/resume\">\n                    <li> Resume </li>\n                {/* <a href=\"/images/Resume.pdf\" className=\"text-dark\"><li> Resume </li></a> */}\n                </Link>\n                <Link style={ navStyle } to=\"/contact\">\n                    <li> Contact </li>\n                </Link>\n            </ul>\n        </nav>\n    );\n}\n\nexport default Nav;","import React, { useEffect, useState } from 'react';\n\nexport default function Resume() {\n  return (\n    <div className=\"Resume\">\n      {/* <h1>Resume</h1> */}\n      <embed src={`${process.env.PUBLIC_URL}/images/Resume.pdf`} type=\"application/pdf\"></embed>\n    </div>\n  );\n}","// import React, { useEffect, useState } from 'react';\nimport React from 'react';\nimport './App.css';\nimport About from '../About';\nimport Projects from '../Projects';\nimport Contact from '../Contact';\nimport Home from '../Home';\nimport Nav from '../Nav';\nimport Resume from '../Resume';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path={process.env.PUBLIC_URL + '/'} exact component={Home}/>\n          <Route path=\"/about\" component={About}/>\n          <Route path=\"/projects\" component={Projects}/>\n          <Route path=\"/resume\" component={Resume}/>\n          <Route path=\"/Contact\" component={Contact}/>\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    // <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n    // </Router>,\n    document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}